{"title":"github-ssh协议配置代理","uid":"357905e1891b1f51272b4c207482f185","slug":"guide/github-ssh协议配置代理","date":"2020-11-10T07:10:01.000Z","updated":"2021-12-11T02:10:04.780Z","comments":true,"path":"api/articles/guide/github-ssh协议配置代理.json","keywords":"golang rust python docker k8s","cover":null,"content":"<h4 id=\"最近git连github经常抽风-使用-git-config-global-http-proxy的方式也没用的状态下，就想搞一下ssh协议走代理\"><a href=\"#最近git连github经常抽风-使用-git-config-global-http-proxy的方式也没用的状态下，就想搞一下ssh协议走代理\" class=\"headerlink\" title=\"最近git连github经常抽风 使用 git config --global http.proxy的方式也没用的状态下，就想搞一下ssh协议走代理\"></a>最近git连github经常抽风 使用 <code>git config --global http.proxy</code>的方式也没用的状态下，就想搞一下ssh协议走代理</h4><h4 id=\"开搞\"><a href=\"#开搞\" class=\"headerlink\" title=\"开搞\"></a>开搞</h4><ol>\n<li><p>配置 <code>.ssh/config</code></p>\n  <pre class=\"line-numbers language-config\" data-language=\"config\"><code class=\"language-config\">Host github.com \nProxyCommand ~&#x2F;.ssh&#x2F;ssh-https-tunnel %h %p \nPort 443\nHostname ssh.github.com</code></pre></li>\n<li><p>下载 <code>ssh-https-tunnel</code></p>\n  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">wget http:&#x2F;&#x2F;zwitterion.org&#x2F;software&#x2F;ssh-https-tunnel&#x2F;ssh-https-tunnel</code></pre>\n</li>\n<li><p>给脚本加上执行权限</p>\n  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">chmod +x ~&#x2F;.ssh&#x2F;ssh-https-tunnel</code></pre>\n</li>\n<li><p>配置代理地址</p>\n  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">vim ~&#x2F;.ssh&#x2F;ssh-https-tunnel\n# 将下面两项改为你自己的保存即可\nmy $proxy &#x3D; &quot;&quot;;\nmy $proxy_port &#x3D; ;</code></pre></li>\n</ol>\n","text":"最近git连github经常抽风 使用 git config --global http.proxy的方式也没用的状态下，就想搞一下ssh协议走代理开搞 配置 .ssh/config Host github.com ProxyCommand ~&#x2F;.ssh&#x2F;ss...","link":"","photos":[],"count_time":{"symbolsCount":493,"symbolsTime":"1 mins."},"categories":[{"name":"操作指南","slug":"操作指南","count":6,"path":"api/categories/操作指南.json"}],"tags":[{"name":"git","slug":"git","count":3,"path":"api/tags/git.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%9C%80%E8%BF%91git%E8%BF%9Egithub%E7%BB%8F%E5%B8%B8%E6%8A%BD%E9%A3%8E-%E4%BD%BF%E7%94%A8-git-config-global-http-proxy%E7%9A%84%E6%96%B9%E5%BC%8F%E4%B9%9F%E6%B2%A1%E7%94%A8%E7%9A%84%E7%8A%B6%E6%80%81%E4%B8%8B%EF%BC%8C%E5%B0%B1%E6%83%B3%E6%90%9E%E4%B8%80%E4%B8%8Bssh%E5%8D%8F%E8%AE%AE%E8%B5%B0%E4%BB%A3%E7%90%86\"><span class=\"toc-text\">最近git连github经常抽风 使用 git config --global http.proxy的方式也没用的状态下，就想搞一下ssh协议走代理</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%BC%80%E6%90%9E\"><span class=\"toc-text\">开搞</span></a></li></ol>","author":{"name":"Rumple","slug":"blog-author","avatar":"/images/avatar.jpeg","link":"/","description":"不断学习 才能更加强大","socials":{"github":"https://github.com/wuruipeng404","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"email":{"icon":"/images/mail.png","link":"mailto:wrp357711589@163.com"}}}},"mapped":true,"prev_post":{"title":"python调用rust与go生成的库文件","uid":"9675eb8263b3ddc03bf1d31763c2e083","slug":"rust/python-rust-go","date":"2020-11-11T03:09:44.000Z","updated":"2021-12-11T02:10:04.781Z","comments":true,"path":"api/articles/rust/python-rust-go.json","keywords":"golang rust python docker k8s","cover":[],"text":"Python,Rust,Go 我最喜欢的三门语言。 今天来搞一下 分别用rust&amp;&amp;go生成.so文件供python调用，顺便简单测试一下他们之间的性能差距 版本 Python: 3.8.6 Go: 1.15.3 Rust: 1.49.0-nightly (25f...","link":"","photos":[],"count_time":{"symbolsCount":"3.2k","symbolsTime":"3 mins."},"categories":[{"name":"rust","slug":"rust","count":1,"path":"api/categories/rust.json"}],"tags":[{"name":"go","slug":"go","count":6,"path":"api/tags/go.json"},{"name":"python","slug":"python","count":1,"path":"api/tags/python.json"},{"name":"rust","slug":"rust","count":1,"path":"api/tags/rust.json"}],"author":{"name":"Rumple","slug":"blog-author","avatar":"/images/avatar.jpeg","link":"/","description":"不断学习 才能更加强大","socials":{"github":"https://github.com/wuruipeng404","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"email":{"icon":"/images/mail.png","link":"mailto:wrp357711589@163.com"}}}}},"next_post":{"title":"详解MySQL的事务机制","uid":"63b43d983c23e0729b58ec6fc65ef6d7","slug":"mysql/详解MySQL的事务机制","date":"2020-11-10T05:56:05.000Z","updated":"2021-12-11T02:10:04.780Z","comments":true,"path":"api/articles/mysql/详解MySQL的事务机制.json","keywords":"golang rust python docker k8s","cover":null,"text":"1. 什么是事务 事务就是一组原子性的sql查询，或者说一个独立的工作单元。即事务内的sql语句，要么全部执行成功，要么全部执行失败； 2. ACID 我们都知道事务的四大特性 原子性(atomicity)：一个事务必须被视为一个不可分割的最小工作单元，整个事务中的所有操作要么全...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"MySQL","slug":"MySQL","count":4,"path":"api/categories/MySQL.json"}],"tags":[{"name":"mysql","slug":"mysql","count":4,"path":"api/tags/mysql.json"},{"name":"事务机制","slug":"事务机制","count":1,"path":"api/tags/事务机制.json"}],"author":{"name":"Rumple","slug":"blog-author","avatar":"/images/avatar.jpeg","link":"/","description":"不断学习 才能更加强大","socials":{"github":"https://github.com/wuruipeng404","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"email":{"icon":"/images/mail.png","link":"mailto:wrp357711589@163.com"}}}}}}