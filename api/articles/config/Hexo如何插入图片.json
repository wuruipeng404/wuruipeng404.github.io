{"title":"hexo如何插入图片","uid":"7110b28ed6014c88f6bf2e9ca83fa56d","slug":"config/Hexo如何插入图片","date":"2020-10-14T05:42:20.000Z","updated":"2021-12-11T02:10:04.777Z","comments":true,"path":"api/articles/config/Hexo如何插入图片.json","keywords":"golang rust python docker k8s","cover":null,"content":"<ol>\n<li><p>首先安装插件</p>\n <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">npm install hexo-asset-image --save</code></pre></li>\n</ol>\n<span id=\"more\"></span>\n<ol start=\"2\">\n<li><p>编辑hexo配置文件<code>_config.yml</code></p>\n <pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\">post_asset_folder: true</code></pre>\n\n</li>\n<li><p>修改<code>node_modules/hexo-asset-image/index.js</code> 为如下内容</p>\n <pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\">use &#39;strict&#39;;\nvar cheerio &#x3D; require(&#39;cheerio&#39;);\n\n&#x2F;&#x2F; http:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;14480345&#x2F;how-to-get-the-nth-occurrence-in-a-string\nfunction getPosition(str, m, i) &#123;\n  return str.split(m, i).join(m).length;\n&#125;\n\nvar version &#x3D; String(hexo.version).split(&#39;.&#39;);\nhexo.extend.filter.register(&#39;after_post_render&#39;, function(data)&#123;\nvar config &#x3D; hexo.config;\nif(config.post_asset_folder)&#123;\n      var link &#x3D; data.permalink;\n  if(version.length &gt; 0 &amp;&amp; Number(version[0]) &#x3D;&#x3D; 3)\n    var beginPos &#x3D; getPosition(link, &#39;&#x2F;&#39;, 1) + 1;\n  else\n    var beginPos &#x3D; getPosition(link, &#39;&#x2F;&#39;, 3) + 1;\n  &#x2F;&#x2F; In hexo 3.1.1, the permalink of &quot;about&quot; page is like &quot;...&#x2F;about&#x2F;index.html&quot;.\n  var endPos &#x3D; link.lastIndexOf(&#39;&#x2F;&#39;) + 1;\n  link &#x3D; link.substring(beginPos, endPos);\n\n  var toprocess &#x3D; [&#39;excerpt&#39;, &#39;more&#39;, &#39;content&#39;];\n  for(var i &#x3D; 0; i &lt; toprocess.length; i++)&#123;\n    var key &#x3D; toprocess[i];\n\n    var $ &#x3D; cheerio.load(data[key], &#123;\n      ignoreWhitespace: false,\n      xmlMode: false,\n      lowerCaseTags: false,\n      decodeEntities: false\n    &#125;);\n\n    $(&#39;img&#39;).each(function()&#123;\n      if ($(this).attr(&#39;src&#39;))&#123;\n          &#x2F;&#x2F; For windows style path, we replace &#39;\\&#39; to &#39;&#x2F;&#39;.\n          var src &#x3D; $(this).attr(&#39;src&#39;).replace(&#39;\\\\&#39;, &#39;&#x2F;&#39;);\n          if(!&#x2F;http[s]*.*|\\&#x2F;\\&#x2F;.*&#x2F;.test(src) &amp;&amp;\n            !&#x2F;^\\s*\\&#x2F;&#x2F;.test(src)) &#123;\n            &#x2F;&#x2F; For &quot;about&quot; page, the first part of &quot;src&quot; can&#39;t be removed.\n            &#x2F;&#x2F; In addition, to support multi-level local directory.\n            var linkArray &#x3D; link.split(&#39;&#x2F;&#39;).filter(function(elem)&#123;\n              return elem !&#x3D; &#39;&#39;;\n            &#125;);\n            var srcArray &#x3D; src.split(&#39;&#x2F;&#39;).filter(function(elem)&#123;\n              return elem !&#x3D; &#39;&#39; &amp;&amp; elem !&#x3D; &#39;.&#39;;\n            &#125;);\n            if(srcArray.length &gt; 1)\n              srcArray.shift();\n            src &#x3D; srcArray.join(&#39;&#x2F;&#39;);\n            $(this).attr(&#39;src&#39;, config.root + link + src);\n            console.info&amp;&amp;console.info(&quot;update link as:--&gt;&quot;+config.root + link + src);\n          &#125;\n      &#125;else&#123;\n          console.info&amp;&amp;console.info(&quot;no src attr, skipped...&quot;);\n          console.info&amp;&amp;console.info($(this));\n      &#125;\n    &#125;);\n    data[key] &#x3D; $.html();\n  &#125;\n&#125;\n&#125;);</code></pre>\n\n</li>\n<li><p>然后就可以插入图片了，hexo new [article] 会生成对应文章的文件夹，将图片放入即可。</p>\n</li>\n</ol>\n","text":" 首先安装插件 npm install hexo-asset-image --save 编辑hexo配置文件_config.yml post_asset_folder: true 修改node_modules/hexo-asset-image/index.js 为如下内容 use...","link":"","photos":[],"count_time":{"symbolsCount":"3k","symbolsTime":"3 mins."},"categories":[{"name":"hexo","slug":"hexo","count":2,"path":"api/categories/hexo.json"}],"tags":[{"name":"hexo","slug":"hexo","count":2,"path":"api/tags/hexo.json"}],"toc":"","author":{"name":"Rumple","slug":"blog-author","avatar":"/images/avatar.jpeg","link":"/","description":"不断学习 才能更加强大","socials":{"github":"https://github.com/wuruipeng404","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"email":{"icon":"/images/mail.png","link":"mailto:wrp357711589@163.com"}}}},"mapped":true,"prev_post":{"title":"Vim常用命令","uid":"c30c52bb5c9d540be0dfcb4f6b31a9fc","slug":"guide/Vim常用命令","date":"2020-10-14T05:43:56.000Z","updated":"2021-12-11T02:10:04.780Z","comments":true,"path":"api/articles/guide/Vim常用命令.json","keywords":"golang rust python docker k8s","cover":null,"text":"&amp;#160;&amp;#160;&amp;#160;&amp;#160;众所周知，vim是程序员的一款利器， 一些大神可以完全抛弃ide只使用vim去构建庞大的项目， 而对于我来说只是一个工具而已，他不应该耗费我的精力去做配置和学习，强行改变自己的编码习惯，所以这里整理了...","link":"","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[{"name":"操作指南","slug":"操作指南","count":5,"path":"api/categories/操作指南.json"}],"tags":[{"name":"vim","slug":"vim","count":1,"path":"api/tags/vim.json"}],"author":{"name":"Rumple","slug":"blog-author","avatar":"/images/avatar.jpeg","link":"/","description":"不断学习 才能更加强大","socials":{"github":"https://github.com/wuruipeng404","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"email":{"icon":"/images/mail.png","link":"mailto:wrp357711589@163.com"}}}}},"next_post":{"title":"Git命令概览","uid":"99196e093c1a105719cfe8e1edea1c78","slug":"guide/Git命令速查表","date":"2020-10-13T03:22:28.000Z","updated":"2021-12-11T02:10:04.779Z","comments":true,"path":"api/articles/guide/Git命令速查表.json","keywords":"golang rust python docker k8s","cover":[],"text":" 创建版本库 git clone url 克隆远程版本库 git init 初始化本地版本库 配置 git config --global user.name &#39;chengcp&#39; 配置global级别的用户名 git config --global user.em...","link":"","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"操作指南","slug":"操作指南","count":5,"path":"api/categories/操作指南.json"}],"tags":[{"name":"git","slug":"git","count":2,"path":"api/tags/git.json"}],"author":{"name":"Rumple","slug":"blog-author","avatar":"/images/avatar.jpeg","link":"/","description":"不断学习 才能更加强大","socials":{"github":"https://github.com/wuruipeng404","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"email":{"icon":"/images/mail.png","link":"mailto:wrp357711589@163.com"}}}}}}