{"title":"计算机基础之网络协议","uid":"bd1810b01d17021ef51e6fe61514d2b5","slug":"basic/计算机基础之网络协议","date":"2020-09-19T09:19:52.000Z","updated":"2022-03-13T05:27:03.417Z","comments":true,"path":"api/articles/basic/计算机基础之网络协议.json","keywords":"golang rust python docker k8s","cover":[],"content":"<h3 id=\"我们都知道OSI把网络分为了一个7层的模型，OSI是Open-System-Interconnect的缩写，意为开放式系统互联。\"><a href=\"#我们都知道OSI把网络分为了一个7层的模型，OSI是Open-System-Interconnect的缩写，意为开放式系统互联。\" class=\"headerlink\" title=\"我们都知道OSI把网络分为了一个7层的模型，OSI是Open System Interconnect的缩写，意为开放式系统互联。\"></a>我们都知道OSI把网络分为了一个7层的模型，OSI是Open System Interconnect的缩写，意为开放式系统互联。</h3><p>  主要是：</p>\n<ul>\n<li>应用层（Application）</li>\n<li>表示层（Presentation）</li>\n<li>会话层（Session）</li>\n<li>传输层（Transport）</li>\n<li>网络层（Network）</li>\n<li>数据链路层（Data Link）</li>\n<li>物理层（Physical） <span id=\"more\"></span>\n  OSI七层参考模型的各个层次的划分遵循下列原则：<ol>\n<li>同一层中的各网络节点都有相同的层次结构，具有同样的功能。</li>\n<li>同一节点内相邻层之间通过接口(可以是逻辑接口)进行通信。</li>\n<li>七层结构中的每一层使用下一层提供的服务，并且向其上层提供服务。</li>\n<li>不同节点的同等层按照协议实现对等层之间的通信</li>\n</ol>\n</li>\n</ul>\n<p>  <img src=\"/images/basic/net.png\" alt=\"OSI\"></p>\n<h4 id=\"应用层\"><a href=\"#应用层\" class=\"headerlink\" title=\"应用层\"></a>应用层</h4><ul>\n<li>与其它计算机进行通讯的一个应用，它是对应应用程序的通信服务的。例如，一个没有通信功能的字处理程序就不能执行通信的代码，从事字处理工作的程序员也不关心OSI的第7层。但是，如果添加了一个传输文件的选项，那么字处理器的程序员就需要实现OSI的第7层。示例：TELNET，HTTP，FTP，NFS，SMTP等。</li>\n<li>数据单位：报文</li>\n</ul>\n<h4 id=\"表示层\"><a href=\"#表示层\" class=\"headerlink\" title=\"表示层\"></a>表示层</h4><ul>\n<li>这一层的主要功能是定义数据格式及加密。例如，FTP允许你选择以二进制或ASCII格式传输。如果选择二进制，那么发送方和接收方不改变文件的内容。如果选择ASCII格式，发送方将把文本从发送方的字符集转换成标准的ASCII后发送数据。在接收方将标准的ASCII转换成接收方计算机的字符集。示例：加密，ASCII等。这一层</li>\n<li>数据单位：报文</li>\n</ul>\n<h4 id=\"会话层\"><a href=\"#会话层\" class=\"headerlink\" title=\"会话层\"></a>会话层</h4><ul>\n<li>它定义了如何开始、控制和结束一个会话，包括对多个双向消息的控制和管理，以便在只完成连续消息的一部分时可以通知应用，从而使表示层看到的数据是连续的，在某些情况下，如果表示层收到了所有的数据，则用数据代表表示层。示例：RPC，SQL等。在会话层及以上的高层次中，数据传送的单位不再另外命名，而是统称为报文。</li>\n<li>数据单位：报文</li>\n</ul>\n<h4 id=\"传输层\"><a href=\"#传输层\" class=\"headerlink\" title=\"传输层\"></a>传输层</h4><ul>\n<li>这层的功能包括是否选择差错恢复协议还是无差错恢复协议，及在同一主机上对不同应用的数据流的输入进行复用，还包括对收到的顺序不对的数据包的重新排序功能。示例：TCP，UDP，SPX。这一层的数据单元也称作数据包(packets)。但是，当你谈论TCP等具体的协议时又有特殊的叫法，TCP的数据单元称为段(segments)而UDP协议的数据单元称为“数据报(datagrams)”。</li>\n</ul>\n<h4 id=\"网络层\"><a href=\"#网络层\" class=\"headerlink\" title=\"网络层\"></a>网络层</h4><ul>\n<li>这层对端到端的包传输进行定义，它定义了能够标识所有结点的逻辑地址，还定义了路由实现的方式和学习的方式。为了适应最大传输单元长度小于包长度的传输介质，网络层还定义了如何将一个包分解成更小的包的分段方法。示例：IP，IPX等。</li>\n<li>数据的单位：数据包(packet)</li>\n</ul>\n<h4 id=\"数据链路层\"><a href=\"#数据链路层\" class=\"headerlink\" title=\"数据链路层\"></a>数据链路层</h4><ul>\n<li>它定义了在单个链路上如何传输数据。这些协议与被讨论的各种介质有关。示例：ATM，FDDI等。</li>\n<li>数据的单位：帧(frame)。</li>\n</ul>\n<h4 id=\"物理层\"><a href=\"#物理层\" class=\"headerlink\" title=\"物理层\"></a>物理层</h4><ul>\n<li>OSI的物理层规范是有关传输介质的特这些规范通常也参考了其他组织制定的标准。连接头、帧、帧的使用、电流、编码及光调制等都属于各种物理层规范中的内容。物理层常用多个规范完成对所有细节的定义。示例：Rj45，802.3等。</li>\n<li>数据单位：比特（bit）。</li>\n</ul>\n<h3 id=\"数据传输过程\"><a href=\"#数据传输过程\" class=\"headerlink\" title=\"数据传输过程\"></a>数据传输过程</h3><p>  <img src=\"/images/basic/net_way.jpeg\" alt=\"net_way\"></p>\n","text":"我们都知道OSI把网络分为了一个7层的模型，OSI是Open System Interconnect的缩写，意为开放式系统互联。 主要是： 应用层（Application） 表示层（Presentation） 会话层（Session） 传输层（Transport） 网络层（Net...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"计算机基础","slug":"计算机基础","count":3,"path":"api/categories/计算机基础.json"},{"name":"网络基础","slug":"计算机基础/网络基础","count":2,"path":"api/categories/计算机基础/网络基础.json"}],"tags":[{"name":"网络协议","slug":"网络协议","count":2,"path":"api/tags/网络协议.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%88%91%E4%BB%AC%E9%83%BD%E7%9F%A5%E9%81%93OSI%E6%8A%8A%E7%BD%91%E7%BB%9C%E5%88%86%E4%B8%BA%E4%BA%86%E4%B8%80%E4%B8%AA7%E5%B1%82%E7%9A%84%E6%A8%A1%E5%9E%8B%EF%BC%8COSI%E6%98%AFOpen-System-Interconnect%E7%9A%84%E7%BC%A9%E5%86%99%EF%BC%8C%E6%84%8F%E4%B8%BA%E5%BC%80%E6%94%BE%E5%BC%8F%E7%B3%BB%E7%BB%9F%E4%BA%92%E8%81%94%E3%80%82\"><span class=\"toc-text\">我们都知道OSI把网络分为了一个7层的模型，OSI是Open System Interconnect的缩写，意为开放式系统互联。</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%BA%94%E7%94%A8%E5%B1%82\"><span class=\"toc-text\">应用层</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%A1%A8%E7%A4%BA%E5%B1%82\"><span class=\"toc-text\">表示层</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BC%9A%E8%AF%9D%E5%B1%82\"><span class=\"toc-text\">会话层</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BC%A0%E8%BE%93%E5%B1%82\"><span class=\"toc-text\">传输层</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%BD%91%E7%BB%9C%E5%B1%82\"><span class=\"toc-text\">网络层</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82\"><span class=\"toc-text\">数据链路层</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%89%A9%E7%90%86%E5%B1%82\"><span class=\"toc-text\">物理层</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E4%BC%A0%E8%BE%93%E8%BF%87%E7%A8%8B\"><span class=\"toc-text\">数据传输过程</span></a></li></ol>","author":{"name":"Rumple","slug":"blog-author","avatar":"/images/avatar.jpeg","link":"/","description":"不断学习 才能更加强大","socials":{"github":"https://github.com/wuruipeng404","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"email":{"icon":"/images/mail.png","link":"mailto:wrp357711589@163.com"}}}},"mapped":true,"prev_post":{"title":"Git命令概览","uid":"99196e093c1a105719cfe8e1edea1c78","slug":"guide/Git命令速查表","date":"2020-10-13T03:22:28.000Z","updated":"2021-12-11T02:10:04.779Z","comments":true,"path":"api/articles/guide/Git命令速查表.json","keywords":"golang rust python docker k8s","cover":[],"text":" 创建版本库 git clone url 克隆远程版本库 git init 初始化本地版本库 配置 git config --global user.name &#39;chengcp&#39; 配置global级别的用户名 git config --global user.em...","link":"","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"操作指南","slug":"操作指南","count":6,"path":"api/categories/操作指南.json"}],"tags":[{"name":"git","slug":"git","count":3,"path":"api/tags/git.json"}],"author":{"name":"Rumple","slug":"blog-author","avatar":"/images/avatar.jpeg","link":"/","description":"不断学习 才能更加强大","socials":{"github":"https://github.com/wuruipeng404","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"email":{"icon":"/images/mail.png","link":"mailto:wrp357711589@163.com"}}}}},"next_post":{}}